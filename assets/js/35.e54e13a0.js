(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{235:function(t,a,e){"use strict";e.r(a);var s=e(0),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),e("ul",[e("li",[t._v("本质上，"),e("strong",[t._v("webpack")]),t._v(" 是一个现代 JavaScript 应用程序的"),e("em",[t._v("静态模块打包工具")]),t._v("。当 webpack 处理应用程序时，它会在内部构建一个 "),e("a",{attrs:{href:"https://webpack.docschina.org/concepts/dependency-graph/",target:"_blank",rel:"noopener noreferrer"}},[t._v("依赖图(dependency graph)"),e("OutboundLink")],1),t._v("，此依赖图会映射项目所需的每个模块，并生成一个或多个 "),e("em",[t._v("bundle")]),t._v("。")])]),t._v(" "),e("h3",{attrs:{id:"_1管理资源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1管理资源"}},[t._v("#")]),t._v(" 1管理资源")]),t._v(" "),e("ul",[e("li",[t._v("loader： 引入模块解析非js文件成可理解的文件")]),t._v(" "),e("li",[t._v("常见资源： css , image ., json ,")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     rules"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.css$/")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n         use"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n           "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style-loader'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'css-loader'")]),t._v("\n         "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"_2-管理输出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-管理输出"}},[t._v("#")]),t._v(" 2 管理输出")]),t._v(" "),e("ul",[e("li",[t._v("随着应用程序增长，并且一旦开始 "),e("a",{attrs:{href:"https://webpack.docschina.org/guides/caching",target:"_blank",rel:"noopener noreferrer"}},[t._v("在文件名中使用 hash"),e("OutboundLink")],1),t._v("] 并输出 "),e("a",{attrs:{href:"https://webpack.docschina.org/guides/code-splitting",target:"_blank",rel:"noopener noreferrer"}},[t._v("多个 bundle"),e("OutboundLink")],1),t._v("，如果继续手动管理 "),e("code",[t._v("index.html")]),t._v(" 文件，就会变得困难起来。然而，通过一些插件可以使这个过程更容易管控。")])]),t._v(" "),e("h4",{attrs:{id:"htmlwebpackplugin：创建了一个全新的文件，所有的-bundle-会自动添加到-html-中。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#htmlwebpackplugin：创建了一个全新的文件，所有的-bundle-会自动添加到-html-中。"}},[t._v("#")]),t._v(" -  HtmlWebpackPlugin：创建了一个全新的文件，所有的 bundle 会自动添加到 html 中。")]),t._v(" "),e("h4",{attrs:{id:"clear-webpack-plugin-在每次构建前清理-dist-文件夹，这样只会生成用到的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clear-webpack-plugin-在每次构建前清理-dist-文件夹，这样只会生成用到的文件"}},[t._v("#")]),t._v(" - clear-webpack-plugin: 在每次构建前清理 "),e("code",[t._v("/dist")]),t._v(" 文件夹，这样只会生成用到的文件")]),t._v(" "),e("h3",{attrs:{id:"_3开发环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3开发环境"}},[t._v("#")]),t._v(" 3开发环境")]),t._v(" "),e("ul",[e("li",[t._v("mode :['development', 'production']")])]),t._v(" "),e("h4",{attrs:{id:"使用-source-map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-source-map"}},[t._v("#")]),t._v(" - 使用 source map")]),t._v(" "),e("ul",[e("li",[t._v("当 webpack 打包源代码时，可能会很难追踪到 error(错误) 和 warning(警告) 在源代码中的原始位置。例如，如果将三个源文件（"),e("code",[t._v("a.js")]),t._v(", "),e("code",[t._v("b.js")]),t._v(" 和 "),e("code",[t._v("c.js")]),t._v("）打包到一个 bundle（"),e("code",[t._v("bundle.js")]),t._v("）中，而其中一个源文件包含一个错误，那么堆栈跟踪就会直接指向到 "),e("code",[t._v("bundle.js")]),t._v("。你可能需要准确地知道错误来自于哪个源文件，所以这种提示这通常不会提供太多帮助。")])]),t._v(" "),e("p",[t._v("为了更容易地追踪 error 和 warning，JavaScript 提供了 "),e("a",{attrs:{href:"http://blog.teamtreehouse.com/introduction-source-maps",target:"_blank",rel:"noopener noreferrer"}},[t._v("source map"),e("OutboundLink")],1),t._v(" 功能，可以将编译后的代码映射回原始源        代码。如果一个错误来自于 "),e("code",[t._v("b.js")]),t._v("，source map 就会明确的告诉你。")]),t._v(" "),e("h4",{attrs:{id:"选择一个开发工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择一个开发工具"}},[t._v("#")]),t._v(" - 选择一个开发工具")]),t._v(" "),e("ul",[e("li",[t._v("webpack 提供几种可选方式，帮助你在代码发生变化后自动编译代码：")])]),t._v(" "),e("ol",[e("li",[t._v("webpack watch mode(webpack 观察模式)")]),t._v(" "),e("li",[t._v("webpack-dev-server")]),t._v(" "),e("li",[t._v("webpack-dev-middleware")])]),t._v(" "),e("p",[t._v("多数场景中，你可能需要使用 "),e("code",[t._v("webpack-dev-server")])]),t._v(" "),e("ul",[e("li",[t._v("webpack watch mode(webpack 观察模式)")]),t._v(" "),e("li",[t._v('你可以指示 webpack "watch" 依赖图中所有文件的更改。如果其中一个文件被更新，代码将被重新编译，所以你不必再去手动运行整个构建。')])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"watch": "webpack --watch",\n')])])]),e("ul",[e("li",[e("code",[t._v("webpack-dev-server")])])]),t._v(" "),e("p",[e("code",[t._v("webpack-dev-server")]),t._v(" 为你提供了一个简单的 web server，并且具有 live reloading(实时重新加载)功能，")]),t._v(" "),e("p",[t._v("localhost:8080 自动寻找dist文件")]),t._v(" "),e("p",[t._v("devServer: {")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("devServer:{\n    contentBase: './dist'\n},\n")])])]),e("h3",{attrs:{id:"_4-模块热替换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-模块热替换"}},[t._v("#")]),t._v(" 4 模块热替换")]),t._v(" "),e("ul",[e("li",[t._v("模块热替换(hot module replacement 或 HMR)是 webpack 提供的最有用的功能之一。它允许在运行时更新所有类型的模块，而无需完全刷新")]),t._v(" "),e("li",[t._v("use: 此功能可以很大程度提高生产效率。我们要做的就是更新 "),e("a",{attrs:{href:"https://github.com/webpack/webpack-dev-server",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack-dev-server"),e("OutboundLink")],1),t._v(" 配置，然后使用 webpack 内置的 HMR 插件")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("devtool"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inline-source-map'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    devServer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      contentBase"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./dist'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      hot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    plugins"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CleanWebpackPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HtmlWebpackPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        title"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'模块热替换'")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("webpack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HotModuleReplacementPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//配置 java ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("accept")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./accept.js'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("accept")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),e("h4",{attrs:{id:"hmr-加载样式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hmr-加载样式"}},[t._v("#")]),t._v(" HMR 加载样式")]),t._v(" "),e("ul",[e("li",[t._v("借助于 style-loader，使用模块热替换来加载 CSS 实际上极其简单。此 loader 在幕后使用了 module.hot.accept，在 CSS 依赖模块更新之后，会将其 patch(修补) 到")]),t._v(" "),e("li")]),t._v(" "),e("h3",{attrs:{id:"_5-tree-shaking"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-tree-shaking"}},[t._v("#")]),t._v(" 5 tree shaking")]),t._v(" "),e("h4",{attrs:{id:"_1-添加一个通用模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-添加一个通用模块"}},[t._v("#")]),t._v(" 1 添加一个通用模块")]),t._v(" "),e("ul",[e("li",[e("em",[t._v("t")]),t._v("ree shaking 是一个术语，通常用于描述移除 JavaScript 上下文中的未引用代码(dead-code)。它依赖于 ES2015 模块语法的 "),e("a",{attrs:{href:"http://exploringjs.com/es6/ch_modules.html#static-module-structure",target:"_blank",rel:"noopener noreferrer"}},[t._v("静态结构"),e("OutboundLink")],1),t._v(" 特性，例如 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import",target:"_blank",rel:"noopener noreferrer"}},[t._v("import"),e("OutboundLink")],1),t._v(" 和 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export",target:"_blank",rel:"noopener noreferrer"}},[t._v("export"),e("OutboundLink")],1),t._v("。这个术语和概念实际上是由 ES2015 模块打包工具 "),e("a",{attrs:{href:"https://github.com/rollup/rollup",target:"_blank",rel:"noopener noreferrer"}},[t._v("rollup"),e("OutboundLink")],1),t._v(" 普及起来的。")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("optimization: {\n   usedExports: true\n }\n")])])]),e("h4",{attrs:{id:"_2-压缩输出结果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-压缩输出结果"}},[t._v("#")]),t._v(" 2 压缩输出结果")]),t._v(" "),e("ul",[e("li",[t._v("通过 "),e("code",[t._v("import")]),t._v(" 和 "),e("code",[t._v("export")]),t._v(" 语法，我们已经找出需要删除的“未引用代码(dead code)”，然而，不仅仅是要找出，还要在 bundle 中删除它们")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("mode: 'production'\n")])])]),e("h3",{attrs:{id:"_6-生产环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-生产环境"}},[t._v("#")]),t._v(" 6 生产环境")]),t._v(" "),e("ul",[e("li",[t._v("在"),e("em",[t._v("开发环境")]),t._v("中，我们需要：强大的 source map 和一个有着 live reloading(实时重新加载) 或 hot module replacement(热模块替换) 能力的 localhost server。")]),t._v(" "),e("li",[e("em",[t._v("生产环境")]),t._v("目标则转移至其他方面，关注点在于压缩 bundle、更轻量的 source map、资源优化等，通过这些优化方式改善加载时间。由于要遵循逻辑分离，我们通常建议为每个环境编写"),e("strong",[t._v("彼此独立的 webpack 配置")]),t._v("。")]),t._v(" "),e("li",[t._v("production 环境中 是否需要 source map?")])]),t._v(" "),e("h3",{attrs:{id:"_7-代码分离"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-代码分离"}},[t._v("#")]),t._v(" 7 代码分离")]),t._v(" "),e("ul",[e("li",[t._v("入口起点：使用 "),e("a",{attrs:{href:"https://webpack.docschina.org/configuration/entry-context",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("entry")]),e("OutboundLink")],1),t._v(" 配置手动地分离代码。")]),t._v(" "),e("li",[t._v("防止重复：使用 "),e("a",{attrs:{href:"https://webpack.docschina.org/plugins/split-chunks-plugin/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("SplitChunksPlugin")]),e("OutboundLink")],1),t._v(" 去重和分离 chunk。")]),t._v(" "),e("li",[t._v("动态导入：通过模块中的内联函数调用来分离代码。")])]),t._v(" "),e("h4",{attrs:{id:"_1-入口起点-entry-points"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-入口起点-entry-points"}},[t._v("#")]),t._v(" 1 入口起点(entry points)")]),t._v(" "),e("p",[t._v("这是迄今为止最简单、最直观的分离代码的方式。不过，这种方式手动配置较多，并有一些隐患，我们将会解决这些问题")]),t._v(" "),e("ul",[e("li",[t._v("如果入口 chunk 之间包含一些重复的模块，那些重复模块都会被引入到各个 bundle 中。")]),t._v(" "),e("li",[t._v("这种方法不够灵活，并且不能动态地将核心应用程序逻辑中的代码拆分出来。")]),t._v(" "),e("li",[t._v("造成在两个 bundle 中重复引用。通过使用 "),e("a",{attrs:{href:"https://webpack.docschina.org/plugins/split-chunks-plugin/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("SplitChunksPlugin")]),e("OutboundLink")],1),t._v(" 插件来移除重复模块。")]),t._v(" "),e("li")]),t._v(" "),e("h4",{attrs:{id:"_2防止重复-prevent-duplication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2防止重复-prevent-duplication"}},[t._v("#")]),t._v(" 2防止重复(prevent duplication)")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://webpack.docschina.org/plugins/split-chunks-plugin/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("SplitChunksPlugin")]),e("OutboundLink")],1),t._v("插件可以将公共的依赖模块提取到已有的 entry chunk 中，或者提取到一个新生成的 chunk")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("   optimization"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("     splitChunks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("       chunks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'all'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h4",{attrs:{id:"_3动态导入-dynamic-imports）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3动态导入-dynamic-imports）"}},[t._v("#")]),t._v(" 3动态导入(dynamic imports）")]),t._v(" "),e("ul",[e("li",[t._v("第一种，也是推荐选择的方式是，使用符合 "),e("a",{attrs:{href:"https://github.com/tc39/proposal-dynamic-import",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECMAScript 提案"),e("OutboundLink")],1),t._v(" 的 "),e("a",{attrs:{href:"https://webpack.docschina.org/api/module-methods#import-",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("import()")]),t._v(" 语法"),e("OutboundLink")],1),t._v(" 来实现动态导入。")]),t._v(" "),e("li",[t._v("第二种，则是 webpack 的遗留功能，使用 webpack 特定的 "),e("code",[t._v("require.ensure。")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("return import(/* webpackChunkName: \"lodash\" */ 'lodash')\n  .then( ( { default: _ }) => {})\n")])])]),e("ul",[e("li",[t._v("使用 "),e("code",[t._v("default")]),t._v(" 的原因是，从 webpack v4 开始，在 import CommonJS 模块时，不会再将导入模块解析为 "),e("code",[t._v("module.exports")]),t._v(" 的值，而是为 CommonJS 模块创建一个 artificial namespace object(人工命名空间对象)")])]),t._v(" "),e("h4",{attrs:{id:"_4-预取-预加载模块-prefetch-preload-module"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-预取-预加载模块-prefetch-preload-module"}},[t._v("#")]),t._v(" 4 预取/预加载模块(prefetch/preload module)")]),t._v(" "),e("ul",[e("li",[t._v('声明 import 时，使用下面这些内置指令，可以让 webpack 输出 "resource hint(资源提示)"，来告知浏览器：')]),t._v(" "),e("li",[t._v("prefetch(预取)：将来某些导航下可能需要的资源")]),t._v(" "),e("li",[t._v("preload(预加载)：当前导航下可能需要资源")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("//...\nimport(/* webpackPrefetch: true */ 'LoginModal');\n")])])]),e("ul",[e("li",[e("p",[t._v("这会生成 "),e("code",[t._v('<link rel="prefetch" href="login-modal-chunk.js">')]),t._v(" 并追加到页面头部，指示着浏览器在闲置时间预取 "),e("code",[t._v("login-modal-chunk.js")]),t._v(" 文件。")])]),t._v(" "),e("li",[e("p",[t._v("preload 指令有许多不同之处：")])]),t._v(" "),e("li",[e("p",[t._v("preload chunk 会在父 chunk 加载时，以并行方式开始加载。prefetch chunk 会在父 chunk 加载结束后开始加载。")])]),t._v(" "),e("li",[e("p",[t._v("preload chunk 具有中等优先级，并立即下载。prefetch chunk 在浏览器闲置时下载。")])]),t._v(" "),e("li",[e("p",[t._v("preload chunk 会在父 chunk 中立即请求，用于当下时刻。prefetch chunk 会用于未来的某个时刻。")])]),t._v(" "),e("li",[e("p",[t._v("浏览器支持程度不同。")])])]),t._v(" "),e("h3",{attrs:{id:"_8-懒加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-懒加载"}},[t._v("#")]),t._v(" 8 懒加载")]),t._v(" "),e("ul",[e("li",[t._v("懒加载或者按需加载，是一种很好的优化网页或应用的方式。这种方式实际上是先把你的代码在一些逻辑断点处分离开，然后在一些代码块中完成某些操作后，立即引用或即将引用另外一些新的代码块。这样加快了应用的初始加载速度，减轻了它的总体体积，因为某些代码块可能永远不会被加载.")])]),t._v(" "),e("h3",{attrs:{id:"_9-缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-缓存"}},[t._v("#")]),t._v(" 9 缓存")]),t._v(" "),e("ul",[e("li",[t._v("1 只要 "),e("code",[t._v("/dist")]),t._v(" 目录中的内容部署到 server 上，client（通常是浏览器）就能够访问网站此 server 的网站及其资源。而最后一步获取资源是比较耗费时间的，这就是为什么浏览器使用一种名为 "),e("a",{attrs:{href:"https://searchstorage.techtarget.com/definition/cache",target:"_blank",rel:"noopener noreferrer"}},[t._v("缓存"),e("OutboundLink")],1),t._v(" 的技术。可以通过命中缓存，以降低网络流量，使网站加载速度更快，然而，如果我们在部署新版本时不更改资源的文件名，浏览器可能会认为它没有被更新，就会使用它的缓存版本。由于缓存的存在，当你需要获取新的代码时，就会显得很棘手。")]),t._v(" "),e("li",[t._v("2 此指南的重点在于通过必要的配置，以确保 webpack 编译生成的文件能够被客户端缓存，而在文件内容变化后，能够请求到新的文件。")])]),t._v(" "),e("h2",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),e("h4",{attrs:{id:"_1-输出文件的文件名-output-filename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-输出文件的文件名-output-filename"}},[t._v("#")]),t._v(" 1 输出文件的文件名(output filename)")]),t._v(" "),e("p",[t._v("我们可以通过替换 "),e("code",[t._v("output.filename")]),t._v(" 中的 "),e("a",{attrs:{href:"https://webpack.docschina.org/configuration/output#output-filename",target:"_blank",rel:"noopener noreferrer"}},[t._v("substitutions"),e("OutboundLink")],1),t._v(" 设置，来定义输出文件的名称。webpack 提供了一种使用称为 "),e("strong",[t._v("substitution(可替换模板字符串)")]),t._v(" 的方式，通过带括号字符串来模板化文件名。其中，"),e("code",[t._v("[contenthash]")]),t._v(" substitution 将根据资源内容创建出唯一 hash。当资源内容发生变化时，"),e("code",[t._v("[contenthash]")]),t._v(" 也会发生变化。")]),t._v(" "),e("p",[t._v("这里使用 "),e("a",{attrs:{href:"https://webpack.docschina.org/guides/getting-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("起步"),e("OutboundLink")],1),t._v(" 中的示例和 "),e("a",{attrs:{href:"https://webpack.docschina.org/guides/output-management",target:"_blank",rel:"noopener noreferrer"}},[t._v("管理输出"),e("OutboundLink")],1),t._v(" 中的 "),e("code",[t._v("plugins")]),t._v(" 插件来作为项目基础，所以我们依然不必手动地维护 "),e("code",[t._v("index.html")]),t._v(" 文件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("output: {\n+     filename: '[name].[contenthash].js',\n      path: path.resolve(__dirname, 'dist')\n    }\n")])])]),e("h4",{attrs:{id:"_2-提取引导模板-extracting-boilerplate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-提取引导模板-extracting-boilerplate"}},[t._v("#")]),t._v(" 2 提取引导模板(extracting boilerplate)")]),t._v(" "),e("p",[t._v("正如我们在 "),e("a",{attrs:{href:"https://webpack.docschina.org/guides/code-splitting",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码分离"),e("OutboundLink")],1),t._v(" 中所学到的，"),e("a",{attrs:{href:"https://webpack.docschina.org/plugins/split-chunks-plugin/",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("SplitChunksPlugin")]),e("OutboundLink")],1),t._v(" 可以用于将模块分离到单独的 bundle 中。webpack 还提供了一个优化功能，可使用 "),e("a",{attrs:{href:"https://webpack.docschina.org/configuration/optimization/#optimization-runtimechunk",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("optimization.runtimeChunk")]),e("OutboundLink")],1),t._v(" 选项将 runtime 代码拆分为一个单独的 chunk。将其设置为 "),e("code",[t._v("single")]),t._v(" 来为所有 chunk 创建一个 runtime bundle：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("optimization"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("     runtimeChunk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'single'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);